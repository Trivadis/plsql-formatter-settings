<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- The Basics -->
    <groupId>com.trivadis.plsql.formatter</groupId>
    <artifactId>tvdformat</artifactId>
    <version>23.1.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>11</jdk.version>
        <jdk.test.version>17</jdk.test.version>
        <sqlcl.version>23.1.0</sqlcl.version>
        <graalvm.version>22.3.1</graalvm.version>
        <native.maven.plugin.version>0.9.21</native.maven.plugin.version>
        <reflections.version>0.10.2</reflections.version>
        <slf4j.version>2.0.7</slf4j.version>
        <javassist.version>3.29.2-GA</javassist.version>
        <skip.native>true</skip.native>
        <disable.logging>true</disable.logging>
    </properties>
    <dependencies>
        <!-- GraalVM JavaScript engine -->
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js</artifactId>
            <version>${graalvm.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js-scriptengine</artifactId>
            <version>${graalvm.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- SQLcl dependencies available in public Maven repositories -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>32.0.0-jre</version>
            <scope>test</scope>
        </dependency>
        <!-- SQLcl dependencies not available in public Maven repositories -->
        <dependency>
            <groupId>oracle.dbtools</groupId>
            <artifactId>dbtools-common</artifactId>
            <version>${sqlcl.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>oracle.dbtools</groupId>
            <artifactId>dbtools-sqlcl</artifactId>
            <version>${sqlcl.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>oracle.xml</groupId>
            <artifactId>xmlparserv2-sans-jaxp-services</artifactId>
            <version>${sqlcl.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>oracle.i18n</groupId>
            <artifactId>orai18n</artifactId>
            <version>${sqlcl.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>oracle.i18n</groupId>
            <artifactId>orai18n-mapping</artifactId>
            <version>${sqlcl.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>oracle.soda</groupId>
            <artifactId>orajsoda</artifactId>
            <version>${sqlcl.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.9.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.graalvm.buildtools</groupId>
            <artifactId>junit-platform-native</artifactId>
            <version>${native.maven.plugin.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- For native image, used during build phase only -->
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>${slf4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <!-- transitive dependendency, added to control version -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <!-- transitive dependendency, added to control version -->
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${javassist.version}</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <!-- Reporting -->
    <reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
		</plugins>
	</reporting>

    <!-- Build Settings -->
    <build>
        <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </resource>
        </resources>
        <testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <!-- workaround for https://issues.apache.org/jira/browse/MRESOURCES-269 -->
                <!-- see also https://issues.apache.org/jira/browse/MRESOURCES-237 -->
                <!-- need to copy content of file not symbolic link, still an issue in 3.3.1 -->
                <!-- cannot use <filtering>true</filtering> because windows-1252.sql failed with MalformedInputException -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <finalName>${project.artifactId}</finalName>
                    <shadedArtifactAttached>false</shadedArtifactAttached>
                    <transformers>
                        <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                        <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <manifestEntries>
                                <Main-Class>com.trivadis.plsql.formatter.TvdFormat</Main-Class>
                                <Class-Path>.</Class-Path>
                            </manifestEntries>
                        </transformer>
                    </transformers>
                    <filters>
                        <filter>
                            <!-- remove conflicting or not required resources -->
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/MANIFEST.MF</exclude>
                                <exclude>module-info.class</exclude>
                                <exclude>META-INF/versions/**</exclude>
                                <exclude>META-INF/native-image/**</exclude>
                            </excludes>
                        </filter>
                        <filter>
                            <!-- remove RuntimeReflectionRegistrationFeature -->
                            <artifact>*:*tvdformat*</artifact>
                            <excludes>
                                <exclude>**/RuntimeReflectionRegistrationFeature.class</exclude>
                            </excludes>
                        </filter>
                        <filter>
                            <!-- include required packages for formatter -->
                            <artifact>*:*dbtools-common*</artifact>
                            <includes>
                                <include>oracle/dbtools/app/**</include>
                                <include>oracle/dbtools/arbori/**</include>
                                <include>oracle/dbtools/parser/**</include>
                                <include>oracle/dbtools/raptor/*</include>
                                <include>oracle/dbtools/raptor/utils/**</include>
                                <include>oracle/dbtools/util/**</include>
                                <include>oracle/dbtools/scripting/**</include>
                            </includes>
                        </filter>
                        <filter>
                            <!-- remove reflections -->
                            <artifact>*:*reflections*</artifact>
                            <excludes>
                                <exclude>**</exclude>
                            </excludes>
                        </filter>
                        <filter>
                            <!-- remove slf4j-jdk14, slf4j-api (transitive) -->
                            <artifact>*:*slf4j*</artifact>
                            <excludes>
                                <exclude>**</exclude>
                            </excludes>
                        </filter>
                        <filter>
                            <!-- remove javassist (transitive) -->
                            <artifact>*:*javassist*</artifact>
                            <excludes>
                                <exclude>**</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <workingDirectory>${project.basedir}</workingDirectory>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <systemPropertyVariables>
                        <disable.logging>${disable.logging}</disable.logging>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- More Project Information -->
    <name>com.trivadis.org.plsql.formatter.settings</name>
    <description>PL/SQL and SQL Formatter</description>
    <url>https://github.com/Trivadis/plsql-formatter-settings</url>
    <inceptionYear>2021</inceptionYear>
    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <organization>
        <name>Trivadis</name>
        <url>https://www.trivadis.com/</url>
    </organization>
    <developers>
        <developer>
            <email>philipp.salvisberg@trivadis.com</email>
            <name>Philipp Salvisberg</name>
            <url>https://github.com/PhilippSalvisberg/</url>
            <id>PhilippSalvisberg</id>
            <roles>
                <role>lead</role>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <!-- Environment Settings -->
    <issueManagement>
        <system>GitHub Issues</system>
        <url>https://github.com/Trivadis/plsql-formatter-settings/issues</url>
    </issueManagement>
    <scm>
        <connection>scm:git:git://github.com/Trivadis/plsql-formater-settings.git</connection>
        <developerConnection>scm:git:git@github.com:Triviadis/plsql-formatter-settings.git</developerConnection>
        <tag>main</tag>
        <url>https://github.com/Trivadis/plsql-formatter-settings</url>
    </scm>

    <!-- Profiles as workaround for https://youtrack.jetbrains.com/issue/IDEA-85478 as described in -->
    <!-- https://intellij-support.jetbrains.com/hc/en-us/community/posts/360009767720-I-want-to-run-tests-with-different-java-version-than-my-source-java-version -->
    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>skip.native</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <version>3.10.1</version>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <!-- different Java version for main and test -->
                            <!-- works with Maven builder from IDE or command line -->
                            <release>${jdk.version}</release>
                            <testRelease>${jdk.test.version}</testRelease>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>idea</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>idea.maven.embedder.version</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <version>3.10.1</version>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <!-- IDEA requires same Java version for main and test -->
                            <!-- see https://youtrack.jetbrains.com/issue/IDEA-85478 -->
                            <release>${jdk.test.version}</release>
                            <testRelease>${jdk.test.version}</testRelease>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>native</id>
            <activation>
                <property>
                    <name>skip.native</name>
                    <value>false</value>
                </property>
            </activation>
            <properties>
                <test>com.trivadis.plsql.formatter.standalone.tests.TvdFormatTest</test>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>${native.maven.plugin.version}</version>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>test-native</id>
                                <goals>
                                    <goal>generateTestResourceConfig</goal>
                                    <goal>test</goal>
                                </goals>
                                <phase>integration-test</phase>
                                <!-- additional configuration for test image -->
                                <configuration>
                                    <buildArgs combine.children="append">
                                        <buildArg>-H:IncludeResources=.*</buildArg>
                                    </buildArgs>
                                </configuration>
                            </execution>
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                                <!-- Override classpath to ensure js is not added to the classpath.
                                     This reduces resuting image size by 25 MB (168 MB instead of 193 MB). -->
                                <configuration>
                                    <classpath>
                                        ${project.build.directory}/${project.build.finalName}.jar,${settings.localRepository}/oracle/dbtools/dbtools-common/${sqlcl.version}/dbtools-common-${sqlcl.version}.jar,${settings.localRepository}/org/reflections/reflections/${reflections.version}/reflections-${reflections.version}.jar,${settings.localRepository}/org/javassist/javassist/${javassist.version}/javassist-${javassist.version}.jar,${settings.localRepository}/org/slf4j/slf4j-api/${slf4j.version}/slf4j-api-${slf4j.version}.jar,${settings.localRepository}/org/slf4j/slf4j-jdk14/${slf4j.version}/slf4j-jdk14-${slf4j.version}.jar,${settings.localRepository}/org/graalvm/js/js-scriptengine/${graalvm.version}/js-scriptengine-${graalvm.version}.jar
                                    </classpath>
                                    <buildArgs combine.children="append">
                                        <!-- including all charsets works for build-native only!?! -->
                                        <buildArg>-H:+AddAllCharsets</buildArg>
                                    </buildArgs>
                                </configuration>
                            </execution>
                        </executions>
                        <!-- common configuration for test-native and build-native -->
                        <configuration>
                            <imageName>${project.artifactId}</imageName>
                            <mainClass>com.trivadis.plsql.formatter.TvdFormat</mainClass>
                            <!-- configuration files in META-INF are detected by the native image builder -->
                            <buildArgs combine.children="append">
                                <buildArg>-Djava.awt.headless=false</buildArg>
                                <buildArg>--features=com.trivadis.plsql.formatter.RuntimeReflectionRegistrationFeature</buildArg>
                                <buildArg>--language:js</buildArg>
                                <buildArg>--no-fallback</buildArg>
                                <!-- overriding default configuration in META-INF, to process list of files-->
                                <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                                <buildArg>-H:JNIConfigurationFiles=src/main/resources/META-INF/native-image/com.trivadis.plsql.formatter/tvdformat/jni-config.json</buildArg>
                                <buildArg>-H:PredefinedClassesConfigurationFiles=src/main/resources/META-INF/native-image/com.trivadis.plsql.formatter/tvdformat/predefined-classes-config.json</buildArg>
                                <buildArg>-H:DynamicProxyConfigurationFiles=src/main/resources/META-INF/native-image/com.trivadis.plsql.formatter/tvdformat/proxy-config.json,src/main/resources/META-INF/native-image/com.trivadis.plsql.formatter/tvdformat/proxy-config-manual.json</buildArg>
                                <buildArg>-H:ReflectionConfigurationFiles=src/main/resources/META-INF/native-image/com.trivadis.plsql.formatter/tvdformat/reflect-config.json,src/main/resources/META-INF/native-image/com.trivadis.plsql.formatter/tvdformat/reflect-config-manual.json</buildArg>
                                <buildArg>-H:ResourceConfigurationFiles=src/main/resources/META-INF/native-image/com.trivadis.plsql.formatter/tvdformat/resource-config.json</buildArg>
                                <buildArg>-H:SerializationConfigurationFiles=src/main/resources/META-INF/native-image/com.trivadis.plsql.formatter/tvdformat/serialization-config.json</buildArg>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>